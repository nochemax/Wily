void control(){
  switch(rec){
  case 'F'://frente
    Serial.println("pase enfrente");
    movimiento();  
    direccionv=direccion;
    analogWrite(velocidad,spy);
    digitalWrite(atras_D,0);
    digitalWrite(atras_I,0);
    digitalWrite(adelante_D,1);
    digitalWrite(adelante_I,1);
    break;
  case 'B'://atras
    Serial.println("pase atras");
    analogWrite(velocidad,spy);
    digitalWrite(adelante_D,0);
    digitalWrite(adelante_I,0);
    digitalWrite(atras_D,1);
    digitalWrite(atras_I,1);
    break;
  case 'R'://derecha
    Serial.println("pase derecha");
    movimiento1();
    direccionv=direccion1;
    analogWrite(velocidad,spy);
    digitalWrite(adelante_D,0);
    digitalWrite(atras_I,0);
    digitalWrite(adelante_I,1);
    digitalWrite(atras_D,1);
    break;
  case 'L'://izquierada
    Serial.println("pase izquierda");
    movimiento2(); 
    direccionv=direccion2;
    analogWrite(velocidad,spy);
    digitalWrite(adelante_I,0);
    digitalWrite(atras_D,0);
    digitalWrite(adelante_D,1);
    digitalWrite(atras_I,1);
    break;
  case 'S'://stop y obteniendo datos 
    RTC.readClock();
    RTC.getFormat(Format);
    delay(80);
    analogWrite(velocidad,spy);
    digitalWrite(atras_D,0);
    digitalWrite(atras_I,0);
    digitalWrite(adelante_D,0);
    digitalWrite(adelante_I,0);
    formato="";
    tempC=analogRead(tempPin); 
    tempC=(5 * tempC * 100)/1024; 
    formato+=String(Format)+String(tempC)+String(direccionv)+String(cm);
    myFile=SD.open("wily.txt", FILE_WRITE);
    if (SD.exists("wily.txt")){         
      myFile.println(formato);
      myFile.close();    
    }
    Serial.println("pase S toma dato");
    break;
  case 'W'://homi casa calculos de trayectoria luces frontal
    while(x<1){
      calculo();
      x++;   
      y=0;
    }
    break;   
  case 'U'://borrar memoria para nuevo recorido 
    while(y<1){
      for ( addr = 0; addr <=15; addr++){
        EEPROM.write(addr, 0);
      } 
      if (addr==16){
        addr = 0;
        RTC.readClock();
        delay(80);  
        minuto=RTC.getMinutes();
        segundo=RTC.getSeconds();
        minuto_ = int(minuto);
        segundo_=int(segundo);
        minuto_=(minuto_+segundo_);
        EEPROM.write(addr,  minuto_);   
        delay(80);
      } 
      y++; 
      x=0; 
    } 
    Serial.println("pase borrado");
    break;   
  case '1'://velocidad
    spy=25;
    analogWrite(velocidad,spy);
    break;
  case '2':
    spy=51;
    analogWrite(velocidad,spy);
    break;
  case '3':
    spy=76;
    analogWrite(velocidad,spy);
    break;
  case '4':
    spy=102;
    analogWrite(velocidad,spy);
    break;
  case '5':
    spy=127;
    analogWrite(velocidad,spy);
    break;
  case '6':
    spy=153;
    analogWrite(velocidad,spy);
    break;
  case '7':
    spy=178;
    analogWrite(velocidad,spy);
    break;
  case '8':
    spy=204;
    analogWrite(velocidad,spy);
    break;
  case '9':
    spy=229;
    analogWrite(velocidad,spy);
    break;
  case 'q':
    spy=255;
    analogWrite(velocidad,spy);
    break;
  }
}
