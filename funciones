void ultrasonido(){
  digitalWrite(Pin_trig,0);
  delayMicroseconds(2);
  digitalWrite(Pin_trig, 1);
  delayMicroseconds(10);
  digitalWrite(Pin_trig, 0);
  duracion = pulseIn(Pin_echo,1);
  cm = duracion / 29 / 2;
  if(cm<=2.00){
    digitalWrite(Pin_trig,0);
    delayMicroseconds(2);
    digitalWrite(Pin_trig, 1);
    delayMicroseconds(10);
    digitalWrite(Pin_trig, 0);
    duracion = pulseIn(Pin_echo,1);
    cm = duracion / 29 / 2;
    //escaneo de la zona
    if(cm<=2.00){ 
      analogWrite(velocidad,160);
      digitalWrite(adelante_D,0);
      digitalWrite(adelante_I,0);
      digitalWrite(atras_D,1);
      digitalWrite(atras_I,1);
      digitalWrite(Pin_trig,0);
      delay(1000);
      delayMicroseconds(2);
      digitalWrite(Pin_trig, 1);
      delayMicroseconds(10);
      digitalWrite(Pin_trig, 0);
      duracion = pulseIn(Pin_echo,1);
      cm = duracion / 29 / 2;
      if(cm>=4){
        analogWrite(velocidad,0);
        digitalWrite(adelante_D,0);
        digitalWrite(adelante_I,0);
        digitalWrite(atras_D,0);
        digitalWrite(atras_I,0);
        digitalWrite(Pin_trig,0);      
        delayMicroseconds(2);
        digitalWrite(Pin_trig, 1);
        delayMicroseconds(10);
        digitalWrite(Pin_trig, 0);
        duracion = pulseIn(Pin_echo,1);
        cm = duracion / 29 / 2;
        xv=cm;
        analogWrite(velocidad,160);
        digitalWrite(adelante_I,0);
        digitalWrite(atras_D,0);
        digitalWrite(adelante_D,1);
        digitalWrite(atras_I,1);
        delay(1500);
        analogWrite(velocidad,0);
        digitalWrite(adelante_D,0);
        digitalWrite(adelante_I,0);
        digitalWrite(atras_D,0);
        digitalWrite(atras_I,0);
        digitalWrite(Pin_trig,0);
        delayMicroseconds(2);
        digitalWrite(Pin_trig, 1);
        delayMicroseconds(10);
        digitalWrite(Pin_trig, 0);
        duracion = pulseIn(Pin_echo,1);
        cm = duracion / 29 / 2;
        lv=cm;  
        analogWrite(velocidad,160);
        digitalWrite(adelante_D,0);
        digitalWrite(atras_I,0);
        digitalWrite(adelante_I,1);
        digitalWrite(atras_D,1);
        delay(2500);
        analogWrite(velocidad,0);
        digitalWrite(adelante_D,0);
        digitalWrite(adelante_I,0);
        digitalWrite(atras_D,0);
        digitalWrite(atras_I,0);
        digitalWrite(Pin_trig,0);
        delayMicroseconds(2);
        digitalWrite(Pin_trig, 1);
        delayMicroseconds(10);
        digitalWrite(Pin_trig, 0);
        duracion = pulseIn(Pin_echo,1);
        cm = duracion / 29 / 2;
        rv=cm;
        razon();
      }
    }
  }
}
void razon(){
  int maximo1;
  int maximo2;
  int maximo;
  maximo1=max(xv,rv);
  maximo2=max(maximo1,lv);
  maximo=max(maximo1,maximo2);
  vv=maximo;
  if(vv==rv){
    analogWrite(velocidad,spy);
    digitalWrite(atras_D,0);
    digitalWrite(atras_I,0);
    digitalWrite(adelante_D,1);
    digitalWrite(adelante_I,1);
    delay(1000);  
    digitalWrite(atras_D,0);
    digitalWrite(atras_I,0);
    digitalWrite(adelante_D,0);
    digitalWrite(adelante_I,0);
  }
  if(vv==lv){              // aqui tienes k ajustar los movimiento con el tiempo 
    //gira izquierda
    analogWrite(velocidad,spy);
    digitalWrite(adelante_I,0);
    digitalWrite(atras_D,0);
    digitalWrite(adelante_D,1);
    digitalWrite(atras_I,1);
    delay(2500);
    digitalWrite(atras_D,0);
    digitalWrite(atras_I,0);
    digitalWrite(adelante_D,0);
    digitalWrite(adelante_I,0);
  }
  if(vv==xv){
    //gira al frente
    analogWrite(velocidad,spy);
    digitalWrite(adelante_I,0);
    digitalWrite(atras_D,0);
    digitalWrite(adelante_D,1);
    digitalWrite(atras_I,1);
    delay(1500);
    digitalWrite(atras_D,0);
    digitalWrite(atras_I,0);
    digitalWrite(adelante_D,0);
    digitalWrite(adelante_I,0);
  }
}

void seguimientoF(){  
  RTC.readClock();
  delay(80);
  minuto=RTC.getMinutes();
  segundo=RTC.getSeconds();
  minuto_ = int(minuto);
  segundo_=int(segundo);
  minuto_=(minuto_+segundo_);
  if(addr<=10){
    w=1;
    addr=(addr+1);
    EEPROM.write(addr,  w);        
    addr=(addr+1);
    EEPROM.write(addr,  minuto_);   
    delay(80);
  }
}
void seguimientoR(){ 
  RTC.readClock();
  delay(80);
  minuto=RTC.getMinutes();
  segundo=RTC.getSeconds();
  minuto_ = int(minuto);
  segundo_=int(segundo);
  minuto_=(minuto_+segundo_);
  if(addr<=10){
    w=2;
    addr=(addr+1);
    EEPROM.write(addr,  w);
    addr=(addr+1);
    EEPROM.write(addr,  minuto_);   
    delay(80);
  }
}
void seguimientoL(){
  RTC.readClock();
  delay(80);
  minuto=RTC.getMinutes();
  segundo=RTC.getSeconds();
  minuto_ = int(minuto);
  segundo_=int(segundo);
  minuto_=(minuto_+segundo_);
  if(addr<=10){
    w=3;
    addr=(addr+1);
    EEPROM.write(addr,  w);
    addr=(addr+1);
    EEPROM.write(addr,  minuto_);   
    delay(80);
  }
}


void calculo(){                 
  cordenada=EEPROM.read(addr);      
  delay(80);
  addr=(addr-1);
  f=EEPROM.read(addr);                   
  delay(80);
  addr=(addr-1);
  cordenada1=EEPROM.read(addr);      
  delay(80);
  if(f==1){                           
    d=(cordenada-cordenada1); 
    d=(d*1000);
    if(d>=9999||d<=-9999){
      d=(d/10);
    }
    d=(+d);
    analogWrite(velocidad,spy);
    digitalWrite(adelante_D,0);//atras
    digitalWrite(adelante_I,0);
    digitalWrite(atras_D,1);
    digitalWrite(atras_I,1);
    delay(d);
    digitalWrite(atras_D,0);
    digitalWrite(atras_I,0);
    digitalWrite(adelante_D,0);
    digitalWrite(adelante_I,0);
  }
  if(f==2){
    d=(cordenada-cordenada1); 
    d=(d*1000);
    if(d>=9999||d<=-9999){
      d=(d/10);
    }
    d=(+d);
    analogWrite(velocidad,spy);//derechara
    digitalWrite(adelante_D,0);
    digitalWrite(atras_I,0);
    digitalWrite(adelante_I,1);
    digitalWrite(atras_D,1);
    delay(d);
    digitalWrite(atras_D,0);
    digitalWrite(atras_I,0);
    digitalWrite(adelante_D,0);
    digitalWrite(adelante_I,0);
  }
  if(f==3){
    d=(cordenada-cordenada1); 
    d=(d*1000);
    if(d>=9999||d<=-9999){
      d=(d/10);
    }
    d=(+d);
    analogWrite(velocidad,spy);//izquierda
    digitalWrite(adelante_I,0);
    digitalWrite(atras_D,0);
    digitalWrite(adelante_D,1);
    digitalWrite(atras_I,1);
    delay(d);  
    digitalWrite(atras_D,0);
    digitalWrite(atras_I,0);
    digitalWrite(adelante_D,0);
    digitalWrite(adelante_I,0);
  }
  d=0;
  f=0;
  cordenada=0;
  cordenada1=cordenada1;        
  while(addr>=0){
    addr=(addr-1);             
    f=EEPROM.read(addr);      
    delay(80);
    addr=(addr-1);
    cordenada=EEPROM.read(addr);                     
    delay(80);
    if(f==1){                         
      d=(cordenada1-cordenada); 
      d=(d*1000);
      if(d>=9999||d<=-9999){
        d=(d/10);
      }
      d=(+d);
      analogWrite(velocidad,spy);
      digitalWrite(adelante_D,0);//atras
      digitalWrite(adelante_I,0);
      digitalWrite(atras_D,1);
      digitalWrite(atras_I,1);
      delay(d);
      digitalWrite(atras_D,0);
      digitalWrite(atras_I,0);
      digitalWrite(adelante_D,0);
      digitalWrite(adelante_I,0);
    }
    if(f==2){
      d=(cordenada1-cordenada); 
      d=(d*1000);
      if(d>=9999||d<=-9999){
        d=(d/10);
      }
      d=(+d);
      analogWrite(velocidad,spy);//derechara
      digitalWrite(adelante_D,0);
      digitalWrite(atras_I,0);
      digitalWrite(adelante_I,1);
      digitalWrite(atras_D,1);
      delay(d);
      digitalWrite(atras_D,0);
      digitalWrite(atras_I,0);
      digitalWrite(adelante_D,0);
      digitalWrite(adelante_I,0);
    }
    if(f==3){
      d=(cordenada1-cordenada); 
      d=(d*1000);
      if(d>=9999||d<=-9999){
        d=(d/10);
      }
      d=(+d);
      analogWrite(velocidad,spy);//izquierda
      digitalWrite(adelante_I,0);
      digitalWrite(atras_D,0);
      digitalWrite(adelante_D,1);
      digitalWrite(atras_I,1);
      delay(d);  
      digitalWrite(atras_D,0);
      digitalWrite(atras_I,0);
      digitalWrite(adelante_D,0);
      digitalWrite(adelante_I,0);
    }
    d=0;
    f=0;
    cordenada1=0;
    cordenada=cordenada;                 
    addr=(addr-1);                
    f=EEPROM.read(addr);      
    delay(80);
    addr=(addr-1);
    cordenada1=EEPROM.read(addr);                     
    delay(80);
    if(f==1){                           
      d=(cordenada-cordenada1); 
      d=(d*1000);
      if(d>=9999||d<=-9999){
        d=(d/10);
      }
      d=(+d);
      analogWrite(velocidad,spy);
      digitalWrite(adelante_D,0);//atras
      digitalWrite(adelante_I,0);
      digitalWrite(atras_D,1);
      digitalWrite(atras_I,1);
      delay(d);
      digitalWrite(atras_D,0);
      digitalWrite(atras_I,0);
      digitalWrite(adelante_D,0);
      digitalWrite(adelante_I,0);
    }
    if(f==2){
      d=(cordenada-cordenada1); 
      d=(d*1000);
      if(d>=9999||d<=-9999){
        d=(d/10);
      }
      d=(+d);
      analogWrite(velocidad,spy);//derechara
      digitalWrite(adelante_D,0);
      digitalWrite(atras_I,0);
      digitalWrite(adelante_I,1);
      digitalWrite(atras_D,1);
      delay(d);
      digitalWrite(atras_D,0);
      digitalWrite(atras_I,0);
      digitalWrite(adelante_D,0);
      digitalWrite(adelante_I,0);
    }
    if(f==3){
      d=(cordenada-cordenada1); 
      d=(d*1000);

      if(d>=9999||d<=-9999){
        d=(d/10);
      }
      d=(+d);
      analogWrite(velocidad,spy);//izquierda
      digitalWrite(adelante_I,0);
      digitalWrite(atras_D,0);
      digitalWrite(adelante_D,1);
      digitalWrite(atras_I,1);
      delay(d);  
      digitalWrite(atras_D,0);
      digitalWrite(atras_I,0);
      digitalWrite(adelante_D,0);
      digitalWrite(adelante_I,0);
    }
    d=0;
    f=0;
    cordenada=0;
    cordenada1=cordenada1;              
  }
}
